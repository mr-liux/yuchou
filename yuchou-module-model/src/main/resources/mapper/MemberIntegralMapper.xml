<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youzi.yuchou.module.model.mapper.MemberIntegralMapper">
  <resultMap id="BaseResultMap" type="com.youzi.yuchou.module.model.model.MemberIntegral">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="jifen" jdbcType="INTEGER" property="jifen" />
    <result column="jifenzq" jdbcType="INTEGER" property="jifenzq" />
    <result column="jifensy" jdbcType="INTEGER" property="jifensy" />
    <result column="reserve1" jdbcType="INTEGER" property="reserve1" />
    <result column="reserve2" jdbcType="INTEGER" property="reserve2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, uid, jifen, jifenzq, jifensy, reserve1, reserve2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_integral
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member_integral
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youzi.yuchou.module.model.model.MemberIntegral">
    insert into member_integral (id, uid, jifen, 
      jifenzq, jifensy, reserve1, 
      reserve2)
    values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{jifen,jdbcType=INTEGER}, 
      #{jifenzq,jdbcType=INTEGER}, #{jifensy,jdbcType=INTEGER}, #{reserve1,jdbcType=INTEGER}, 
      #{reserve2,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.youzi.yuchou.module.model.model.MemberIntegral">
    insert into member_integral
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="jifen != null">
        jifen,
      </if>
      <if test="jifenzq != null">
        jifenzq,
      </if>
      <if test="jifensy != null">
        jifensy,
      </if>
      <if test="reserve1 != null">
        reserve1,
      </if>
      <if test="reserve2 != null">
        reserve2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="jifen != null">
        #{jifen,jdbcType=INTEGER},
      </if>
      <if test="jifenzq != null">
        #{jifenzq,jdbcType=INTEGER},
      </if>
      <if test="jifensy != null">
        #{jifensy,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null">
        #{reserve1,jdbcType=INTEGER},
      </if>
      <if test="reserve2 != null">
        #{reserve2,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youzi.yuchou.module.model.model.MemberIntegral">
    update member_integral
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="jifen != null">
        jifen = #{jifen,jdbcType=INTEGER},
      </if>
      <if test="jifenzq != null">
        jifenzq = #{jifenzq,jdbcType=INTEGER},
      </if>
      <if test="jifensy != null">
        jifensy = #{jifensy,jdbcType=INTEGER},
      </if>
      <if test="reserve1 != null">
        reserve1 = #{reserve1,jdbcType=INTEGER},
      </if>
      <if test="reserve2 != null">
        reserve2 = #{reserve2,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youzi.yuchou.module.model.model.MemberIntegral">
    update member_integral
    set uid = #{uid,jdbcType=INTEGER},
      jifen = #{jifen,jdbcType=INTEGER},
      jifenzq = #{jifenzq,jdbcType=INTEGER},
      jifensy = #{jifensy,jdbcType=INTEGER},
      reserve1 = #{reserve1,jdbcType=INTEGER},
      reserve2 = #{reserve2,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>