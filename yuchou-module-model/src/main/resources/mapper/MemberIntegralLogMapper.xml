<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youzi.yuchou.module.model.mapper.MemberIntegralLogMapper">
  <resultMap id="BaseResultMap" type="com.youzi.yuchou.module.model.model.MemberIntegralLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="sz" jdbcType="INTEGER" property="sz" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, sz, uid, amount, balance, remark, add_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_integral_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member_integral_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youzi.yuchou.module.model.model.MemberIntegralLog">
    insert into member_integral_log (id, type, sz, 
      uid, amount, balance, 
      remark, add_time)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{sz,jdbcType=INTEGER}, 
      #{uid,jdbcType=INTEGER}, #{amount,jdbcType=DECIMAL}, #{balance,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.youzi.yuchou.module.model.model.MemberIntegralLog">
    insert into member_integral_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="sz != null">
        sz,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="sz != null">
        #{sz,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youzi.yuchou.module.model.model.MemberIntegralLog">
    update member_integral_log
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="sz != null">
        sz = #{sz,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youzi.yuchou.module.model.model.MemberIntegralLog">
    update member_integral_log
    set type = #{type,jdbcType=INTEGER},
      sz = #{sz,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      amount = #{amount,jdbcType=DECIMAL},
      balance = #{balance,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>