<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youzi.yuchou.module.model.mapper.ProvCityAreaStreetMapper">
  <resultMap id="BaseResultMap" type="com.youzi.yuchou.module.model.model.ProvCityAreaStreet">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="INTEGER" property="code" />
    <result column="parent_code" jdbcType="INTEGER" property="parentCode" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, parent_code, name, level, sort
  </sql>
  <sql id="Base_Column_List_param">
    code, name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from prov_city_area_street
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getParamsList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List_param" />
    from prov_city_area_street
    where level = #{level,jdbcType=INTEGER}
  </select>

  <select id="getParentCodeList" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List_param" />
    from prov_city_area_street
    where parent_code = #{parentCode,jdbcType=INTEGER}
    ORDER BY sort DESC
  </select>


  <insert id="insert" parameterType="com.youzi.yuchou.module.model.model.ProvCityAreaStreet">
    insert into prov_city_area_street (id, code, parent_code, 
      name, level, sort)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=INTEGER}, #{parentCode,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.youzi.yuchou.module.model.model.ProvCityAreaStreet">
    insert into prov_city_area_street
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="parentCode != null">
        parent_code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
      <if test="parentCode != null">
        #{parentCode,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youzi.yuchou.module.model.model.ProvCityAreaStreet">
    update prov_city_area_street
    <set>
      <if test="code != null">
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="parentCode != null">
        parent_code = #{parentCode,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youzi.yuchou.module.model.model.ProvCityAreaStreet">
    update prov_city_area_street
    set code = #{code,jdbcType=INTEGER},
      parent_code = #{parentCode,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>