<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.youzi.yuchou.module.model.mapper.BankMapper">
  <resultMap id="BaseResultMap" type="com.youzi.yuchou.module.model.model.Bank">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="bankNum" jdbcType="VARCHAR" property="banknum" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, code, type, classes, bankNum, sort
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bank
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bank
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.youzi.yuchou.module.model.model.Bank">
    insert into bank (id, name, code, 
      type, classes, bankNum, 
      sort)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{classes,jdbcType=VARCHAR}, #{banknum,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.youzi.yuchou.module.model.model.Bank">
    insert into bank
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="banknum != null">
        bankNum,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="banknum != null">
        #{banknum,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.youzi.yuchou.module.model.model.Bank">
    update bank
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="banknum != null">
        bankNum = #{banknum,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.youzi.yuchou.module.model.model.Bank">
    update bank
    set name = #{name,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      classes = #{classes,jdbcType=VARCHAR},
      bankNum = #{banknum,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>